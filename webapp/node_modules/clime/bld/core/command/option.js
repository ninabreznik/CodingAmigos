"use strict";
var assert = require('assert');
var hyphenate_1 = require('hyphenate');
/**
 * The abstract `Options` class to be extended.
 */
var Options = (function () {
    function Options() {
    }
    return Options;
}());
exports.Options = Options;
/**
 * The `option()` decorator that decorates concrete class of `Options`.
 */
function option(_a) {
    var _b = _a === void 0 ? {} : _a, optionName = _b.name, flag = _b.flag, placeholder = _b.placeholder, toggle = _b.toggle, type = _b.type, required = _b.required, validator = _b.validator, validators = _b.validators, defaultValue = _b.default, description = _b.description;
    assert(!flag || /^[a-z]$/i.test(flag), 'The option flag is expected to be a letter');
    if (!validators) {
        validators = validator ? [validator] : [];
    }
    return function (target, name) {
        var constructor = target.constructor;
        var definitions = constructor.definitions;
        if (definitions) {
            definitions = constructor.definitions;
        }
        else {
            definitions = constructor.definitions = [];
        }
        type = type || Reflect.getMetadata('design:type', target, name);
        optionName = optionName || hyphenate_1.default(name, { lowerCase: true });
        definitions.push({
            name: optionName,
            key: name,
            flag: flag,
            placeholder: placeholder,
            toggle: toggle,
            type: type,
            required: required,
            validators: validators,
            default: defaultValue,
            description: description
        });
    };
}
exports.option = option;
//# sourceMappingURL=option.js.map