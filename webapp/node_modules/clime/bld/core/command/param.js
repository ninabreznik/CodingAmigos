"use strict";
var assert = require('assert');
var utils_1 = require('../../utils');
/**
 * The `param()` decorator that decorates parameters of method `execute` on a
 * concrete `Command` class.
 * This decorator could only be applied to continuous parameters of which the
 * index starts from 0.
 */
function param(_a) {
    var _b = _a === void 0 ? {} : _a, paramName = _b.name, type = _b.type, required = _b.required, validator = _b.validator, validators = _b.validators, defaultValue = _b.default, description = _b.description;
    if (!validators) {
        validators = validator ? [validator] : [];
    }
    // TODO: name: 'execute'
    return function (target, name, index) {
        assert.equal(name, 'execute');
        var constructor = target.constructor;
        var definitions = constructor.paramDefinitions;
        if (constructor.paramDefinitions) {
            definitions = constructor.paramDefinitions;
        }
        else {
            definitions = constructor.paramDefinitions = [];
        }
        type = type ||
            Reflect.getMetadata('design:paramtypes', target, 'execute')[index];
        paramName = paramName || utils_1.Reflection.getFunctionParameterName(target.execute, index);
        definitions[index] = {
            name: paramName,
            index: index,
            type: type,
            required: required,
            validators: validators,
            default: defaultValue,
            description: description
        };
    };
}
exports.param = param;
//# sourceMappingURL=param.js.map