"use strict";
var assert = require('assert');
var utils_1 = require('../../utils');
/**
 * The `params()` decorator that decorates one array parameter of method
 * `execute` of a concrete `Command` class.
 */
function params(_a) {
    var paramName = _a.name, type = _a.type, required = _a.required, validator = _a.validator, validators = _a.validators, description = _a.description;
    if (!validators) {
        validators = validator ? [validator] : [];
    }
    // TODO: name: 'execute'
    return function (target, name, index) {
        assert.equal(name, 'execute');
        var constructor = target.constructor;
        if (constructor.paramsDefinition) {
            throw new Error('Can only define one `params` parameter');
        }
        var paramDefinitions = constructor.paramDefinitions || [];
        type = type ||
            Reflect.getMetadata('design:paramtypes', target, 'execute')[index];
        paramName = paramName || utils_1.Reflection.getFunctionParameterName(target.execute, index);
        constructor.paramsDefinition = {
            name: paramName,
            index: index,
            type: type,
            required: required,
            validators: validators,
            description: description
        };
    };
}
exports.params = params;
//# sourceMappingURL=params.js.map