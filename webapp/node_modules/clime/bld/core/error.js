"use strict";
var __extends = (this && this.__extends) || function (d, b) {
    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
};
var Chalk = require('chalk');
var extendable_error_1 = require('extendable-error');
var ExpectedError = (function (_super) {
    __extends(ExpectedError, _super);
    function ExpectedError(message, code) {
        if (code === void 0) { code = 1; }
        _super.call(this, message);
        this.code = code;
    }
    ExpectedError.prototype.print = function (stdout, stderr) {
        var output = Chalk.dim.red('ERR') + " " + this.message + ".\n";
        stderr.write(output);
    };
    return ExpectedError;
}(extendable_error_1.default));
exports.ExpectedError = ExpectedError;
//# sourceMappingURL=error.js.map