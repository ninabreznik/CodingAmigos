"use strict";
var Chalk = require('chalk');
function buildTableOutput(rows, _a) {
    var _b = _a === void 0 ? {} : _a, _c = _b.spaces, spaces = _c === void 0 ? 4 : _c, _d = _b.indent, indent = _d === void 0 ? 0 : _d;
    var maxTextLengths = [];
    for (var _i = 0, rows_1 = rows; _i < rows_1.length; _i++) {
        var row = rows_1[_i];
        var lastNoneEmptyIndex = 0;
        for (var i = 0; i < row.length; i++) {
            var text = row[i] || '';
            var textLength = Chalk.stripColor(text).length;
            if (!textLength) {
                continue;
            }
            lastNoneEmptyIndex = i;
            if (maxTextLengths.length > i) {
                maxTextLengths[i] = Math.max(maxTextLengths[i], textLength);
            }
            else {
                maxTextLengths[i] = textLength;
            }
        }
        row.splice(lastNoneEmptyIndex + 1);
    }
    var indentStr = typeof indent === 'string' ?
        indent :
        new Array(indent + 1).join(' ');
    return rows
        .map(function (row) {
        var line = indentStr;
        for (var i = 0; i < row.length; i++) {
            var text = row[i] || '';
            var textLength = Chalk.stripColor(text).length;
            var maxLength = maxTextLengths[i];
            line += text;
            line += new Array(maxLength - textLength + 1).join(' ');
            if (i < row.length - 1) {
                if (typeof spaces === 'string') {
                    line += spaces;
                }
                else {
                    line += new Array(spaces + 1).join(' ');
                }
            }
        }
        return line;
    })
        .join('\n') + '\n';
}
exports.buildTableOutput = buildTableOutput;
function indent(text, indent) {
    if (indent === void 0) { indent = 2; }
    var indentStr = typeof indent === 'string' ?
        indent.replace(/\r/g, '') :
        Array(indent + 1).join(' ');
    return text.replace(/^/mg, indentStr);
}
exports.indent = indent;
//# sourceMappingURL=string.js.map