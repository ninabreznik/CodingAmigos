"use strict";
var _1 = require('../core/');
var RangeValidator = (function () {
    function RangeValidator(
        /** value >= from. */
        from, 
        /** value < to. */
        to) {
        this.from = from;
        this.to = to;
    }
    RangeValidator.prototype.validate = function (value, name) {
        if (value < this.from || value >= this.to) {
            throw new _1.ExpectedError("Value of `" + name + "` is not within the range of [" + this.from + ", " + this.to + ")");
        }
    };
    return RangeValidator;
}());
exports.RangeValidator = RangeValidator;
function range(from, to) {
    return new RangeValidator(from, to);
}
exports.range = range;
var IntegerValidator = (function () {
    function IntegerValidator() {
    }
    IntegerValidator.prototype.validate = function (value, name) {
        if (value % 1 !== 0) {
            throw new _1.ExpectedError("Value of `" + name + "` is not an integer");
        }
    };
    return IntegerValidator;
}());
exports.IntegerValidator = IntegerValidator;
exports.integer = new IntegerValidator();
//# sourceMappingURL=validation.js.map