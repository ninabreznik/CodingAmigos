"use strict";
var Semver = require('semver');
var hasOwnProperty = Object.prototype.hasOwnProperty;
// Compatibility with `const match = require('semver-match')`.
module.exports = exports = match;
function match(range, versions, tags) {
    if (tags === void 0) { tags = {}; }
    if (Semver.validRange(range)) {
        versions = versions.sort(Semver.rcompare);
        var latest = tags['latest'] || versions[0];
        for (var _i = 0, versions_1 = versions; _i < versions_1.length; _i++) {
            var version = versions_1[_i];
            if (Semver.gte(latest, version) && Semver.satisfies(version, range)) {
                return version;
            }
        }
        for (var _a = 0, versions_2 = versions; _a < versions_2.length; _a++) {
            var version = versions_2[_a];
            if (Semver.satisfies(version, range)) {
                return version;
            }
        }
        if (range === '*') {
            return latest;
        }
        return undefined;
    }
    else {
        // Otherwise, treat it as a tag (according to NPM source code).
        return hasOwnProperty.call(tags, range) ? tags[range] : undefined;
    }
}
exports.match = match;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = match;
//# sourceMappingURL=index.js.map